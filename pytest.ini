[tool:pytest]
# PyEvolution API - Pytest Configuration
# Professional test configuration for library development

# Test discovery
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Test paths
testpaths = tests

# Minimum version
minversion = 6.0

# Add current directory to Python path
addopts =
    -ra
    --strict-markers
    --strict-config
    --cov=pyevolutionapi
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml
    --cov-fail-under=80
    --tb=short
    -v

# Markers for test categorization
markers =
    # Test types
    unit: Unit tests (fast, isolated, no external dependencies)
    integration: Integration tests (require real Evolution API)
    e2e: End-to-end tests (complete workflows, may require manual intervention)

    # Speed/Performance
    slow: Tests that take longer than usual to execute
    fast: Quick tests that should complete in under 1 second

    # Requirements
    requires_api: Tests that require Evolution API to be running
    requires_whatsapp: Tests that require actual WhatsApp connection/QR scan
    requires_qr: Tests that require QR code scanning (manual intervention)

    # Stability
    flaky: Tests that may be unreliable due to timing or external factors
    skip_ci: Tests to skip in CI environment

    # Features/Components
    instance: Tests related to instance management
    message: Tests related to message sending/receiving
    chat: Tests related to chat operations
    group: Tests related to group management
    profile: Tests related to profile operations
    webhook: Tests related to webhook configuration
    auth: Tests related to authentication

    # Models/Validation
    pydantic: Tests for Pydantic model validation
    models: Tests for data models
    serialization: Tests for data serialization/deserialization

    # Network/API
    http: Tests involving HTTP requests
    api_compat: Tests for API compatibility across versions
    rate_limit: Tests related to API rate limiting

    # Development
    regression: Regression tests for previously fixed bugs
    experimental: Experimental features under development

# Filter warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore:.*urllib3.*:DeprecationWarning
    ignore:.*requests.*:DeprecationWarning

# Test timeout (prevent hanging tests)
timeout = 300

# Logging configuration for tests
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Capture configuration
capture = no
console_output_style = progress

# Parallel execution configuration (for pytest-xdist)
# Uncomment if using pytest-xdist for parallel testing
# workers = auto
# maxfail = 3
# dist = loadfile
